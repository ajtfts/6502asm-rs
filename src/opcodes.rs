    use lazy_static::lazy_static;
    use std::collections::HashMap;

    lazy_static! {
        pub static ref OPCODES: HashMap<String, Vec<u8>> = {
            let mut map = HashMap::new();

            map.insert(
                "ADC".to_string(),
                vec![
                    0x00, 0x6d, 0x7d, 0x79, 0x69, 0x00, 0x00, 0x61, 0x71, 0x00, 0x65, 0x75, 0x00,
                ],
            );

            map.insert(
                "AND".to_string(),
                vec![
                    0x00, 0x2d, 0x3d, 0x39, 0x29, 0x00, 0x00, 0x21, 0x31, 0x00, 0x25, 0x35, 0x00,
                ],
            );

            map.insert(
                "ASL".to_string(),
                vec![
                    0x0a, 0x0e, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x16, 0x00,
                ],
            );

            map.insert(
                "BCC".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "BCS".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "BEQ".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "BIT".to_string(),
                vec![
                    0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00,
                ],
            );

            map.insert(
                "BMI".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "BNE".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "BPL".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "BRK".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "BVC".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "BVS".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "CLC".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "CLD".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "CLI".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "CLV".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "CMP".to_string(),
                vec![
                    0x00, 0xcd, 0xdd, 0xd9, 0xc9, 0x00, 0x00, 0xc1, 0xd1, 0x00, 0xc5, 0xd5, 0x00,
                ],
            );

            map.insert(
                "CPX".to_string(),
                vec![
                    0x00, 0xec, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe4, 0x00, 0x00,
                ],
            );

            map.insert(
                "CPY".to_string(),
                vec![
                    0x00, 0xcc, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc4, 0x00, 0x00,
                ],
            );

            map.insert(
                "DEC".to_string(),
                vec![
                    0x00, 0xce, 0xde, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0xd6, 0x00,
                ],
            );

            map.insert(
                "DEX".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0xca, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "DEY".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "EOR".to_string(),
                vec![
                    0x00, 0x4d, 0x5d, 0x59, 0x49, 0x00, 0x00, 0x41, 0x51, 0x00, 0x45, 0x55, 0x4d,
                ],
            );

            map.insert(
                "INC".to_string(),
                vec![
                    0x00, 0xee, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe6, 0xf6, 0x00,
                ],
            );

            map.insert(
                "INX".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "INY".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "JMP".to_string(),
                vec![
                    0x00, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "JSR".to_string(),
                vec![
                    0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "LDA".to_string(),
                vec![
                    0x00, 0xad, 0xbd, 0xb9, 0xa9, 0x00, 0x00, 0xa1, 0xb1, 0x00, 0xa5, 0xb5, 0x00,
                ],
            );

            map.insert(
                "LDX".to_string(),
                vec![
                    0x00, 0xae, 0x00, 0xbe, 0xa2, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x00, 0xb6,
                ],
            );

            map.insert(
                "LDY".to_string(),
                vec![
                    0x00, 0xac, 0xbc, 0x00, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0xb4, 0x00,
                ],
            );

            map.insert(
                "LSR".to_string(),
                vec![
                    0x4a, 0x4e, 0x5e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x56, 0x00,
                ],
            );
            map.insert(
                "NOP".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0xea, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "ORA".to_string(),
                vec![
                    0x00, 0x0d, 0x1d, 0x19, 0x09, 0x00, 0x00, 0x01, 0x11, 0x00, 0x05, 0x15, 0x00,
                ],
            );

            map.insert(
                "PHA".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "PHP".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "PLA".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "PLP".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "ROL".to_string(),
                vec![
                    0x2a, 0x2e, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x36, 0x00,
                ],
            );

            map.insert(
                "ROR".to_string(),
                vec![
                    0x6a, 0x6e, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x76, 0x00,
                ],
            );

            map.insert(
                "RTI".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "RTS".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "SBC".to_string(),
                vec![
                    0x00, 0xed, 0xfd, 0xf9, 0xE9, 0x00, 0x00, 0xe1, 0xf1, 0x00, 0xe5, 0xf5, 0x00,
                ],
            );

            map.insert(
                "SEC".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "SED".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "SEI".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "STA".to_string(),
                vec![
                    0x00, 0x8d, 0x9d, 0x99, 0x00, 0x00, 0x00, 0x81, 0x91, 0x00, 0x85, 0x95, 0x00,
                ],
            );

            map.insert(
                "STX".to_string(),
                vec![
                    0x00, 0x8e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x00, 0x96,
                ],
            );

            map.insert(
                "STY".to_string(),
                vec![
                    0x00, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x94, 0x00,
                ],
            );

            map.insert(
                "TAX".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0xaa, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "TAY".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "TSX".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0xba, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "TXA".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x8a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "TXS".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x9a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map.insert(
                "TYA".to_string(),
                vec![
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                ],
            );

            map
        };
    }
